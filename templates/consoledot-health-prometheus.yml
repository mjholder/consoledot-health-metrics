apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: prometheus
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: prometheus
    name: prometheus
  spec:
    minReadySeconds: 15
    progressDeadlineSeconds: 600
    replicas: ${{REPLICAS}}
    revisionHistoryLimit: 9
    selector:
      matchLabels:
        app: prometheus
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        labels:
          app: prometheus
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - prometheus
                topologyKey: failure-domain.beta.kubernetes.io/zone
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - prometheus
                topologyKey: kubernetes.io/hostname
              weight: 99
        containers: 
        - env:
          ports:
            - containerPort: 9090
              protocol: TCP
            - containerPort: 9000
              protocol: TCP
          name: prometheus
          image: registry.redhat.io/openshift4/ose-prometheus
          args:
            - "--config.file=/config/prometheus_2.yml"
            - "--storage.tsdb.path=/prometheus/"
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 250Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: config-vol
          - mountPath: /prometheus/
            name: prometheus-storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        volumes:
        - configMap:
            name: prometheus-server-conf
          name: config-vol
        - name: prometheus-storage-volume
          persistantVolumeClaim:
            claimName: prometheus
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: prometheus
    name: prometheus
  spec:
    ports:
    - name: 9090-tcp
      port: 9090
      protocol: TCP
    - name: 9000-tcp
      port: 9000
      protocol: TCP
    selector:
      app: prometheus
    sessionAffinity: None
    type: ClusterIP 
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: prometheus
      template: prometheus
    name: prometheus
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
parameters:
- description: The number of replicas to use in the deployment
  name: REPLICAS
  value: '1'
- description: Volume space available for data, e.g. 512Mi, 2Gi
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi
